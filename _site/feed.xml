<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-10-03T22:02:29+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Open Source C++ developerâ€™s journal</title><author><name>Ahmad Samir</name></author><entry><title type="html">Shell script to open all them all (files)</title><link href="http://localhost:4000/2020/09/25/open-files-git-commit.html" rel="alternate" type="text/html" title="Shell script to open all them all (files)" /><published>2020-09-25T00:00:00+02:00</published><updated>2020-09-25T00:00:00+02:00</updated><id>http://localhost:4000/2020/09/25/open-files-git-commit</id><content type="html" xml:base="http://localhost:4000/2020/09/25/open-files-git-commit.html">&lt;html&gt;
&lt;head&gt;
&lt;link href=&quot;/assets/main.css&quot; rel=&quot;stylesheet&quot; /&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;p&gt;This is a small shell script that I use to open all files related to a commit in git; I find it quite useful when I want to resume working on a local branch.&lt;/p&gt;

  &lt;div&gt;
    &lt;pre class=&quot;code&quot;&gt;
#!/bin/bash
gitPrefix=$(git rev-parse --show-toplevel)

__num=$(git diff --name-only | wc -l)

filter_open() {
    $1 | perl -p -e 's!.+!'$gitPrefix'/$&amp;!; s!.+(png|jpeg)$!!' | xargs kate -n &gt; /dev/null 2&gt;&amp;1 &amp;
}

if [ -z &quot;$1&quot; -a &quot;$__num&quot; -ge 1 ]; then
    filter_open &quot;git diff --name-only&quot;
else
    filter_open &quot;git diff HEAD^1 --name-only&quot;
fi
    &lt;/pre&gt;
  &lt;/div&gt;

  &lt;p&gt;&lt;code&gt;git rev-parse --show-toplevel&lt;/code&gt;: returns the absolute path to the topelevel git repo dir&lt;/p&gt;
  &lt;p&gt;&lt;code&gt;git diff --name-only&lt;/code&gt;: returns the list of the files that are changed but not commited yet&lt;/p&gt;
  &lt;p&gt;&lt;code&gt;git diff HEAD^1 --name-only&lt;/code&gt;: returns the list of files that were changed (committed or not) since the commit before last in the repo&lt;/p&gt;
  &lt;p&gt;&lt;code&gt;perl -p -e 's!.+!'$gitPrefix'/$&amp;!; s!.+(png|jpeg)$!!'&lt;/code&gt;: this prepends $gitPrefix to all the relative file paths that the from git diff commands; also it filters out all png/jpeg files (I don't want to edit images with a text editor... it doesn't work)&lt;/p&gt;

  &lt;p&gt;As you can see, I write hacky bash scripts, I am sure there are ways to make it more elegant, but it works, so.&lt;/p&gt;

  &lt;p&gt;I have two use cases here:
    &lt;li&gt;I started working in a branch, and haven't committed anything yet, so to reopen all the files I've changed in kate, I use the script without any arguments&lt;/li&gt;
    &lt;li&gt;I started working on a branch, committed some stuff, and also have some work-in-progress that hasn't been committed yet, if I want to open all files (those that have been committed in the last commit and those that are still not committed), I call the script with &lt;i&gt;any&lt;/i&gt; argument e.g. &lt;code&gt;all&lt;/code&gt;.&lt;/li&gt;
  &lt;/p&gt;

  &lt;p&gt;Bonus point, if you save the script as e.g. &lt;code&gt;git-open-files&lt;/code&gt; somewhere in your PATH, you can call the script directly (after making it executable) from terminal or you can use it as a git command &lt;code&gt;git open-files&lt;/code&gt;.&lt;/p&gt;

  &lt;p&gt;Happy hacking!&lt;/p&gt;

&lt;/body&gt;
&lt;/html&gt;</content><author><name>Ahmad Samir</name></author><summary type="html">This is a small shell script that I use to open all files related to a commit in git; I find it quite useful when I want to resume working on a local branch.</summary></entry></feed>